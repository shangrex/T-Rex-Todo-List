{"version":3,"sources":["components/Taskbutton.js","components/Header.js","components/Task.js","components/Tasks.js","components/Timer.js","components/Inputbar.js","components/Resettimebtn.js","components/Switchtimebtn.js","images/trans-t-rex.png","App.js","reportWebVitals.js","index.js"],"names":["Taskbutton","color","text","onTask","className","style","backgroundColor","onClick","Header","showtask","Task","task","onDelete","curser","id","time","Tasks","tasks","map","index","Timer","time_count","Inputbar","onAdd","useState","setText","setTime","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Resettimebtn","onReset","Switchtimebtn","onSwitch","countdown","background_style","backgroundImage","trans_pic_rex","backgroundRepeat","backgroundSize","width","height","margin","App","setshowtask","count","setCount","coundown","setCountdown","settasks","useEffect","timer","setInterval","clearInterval","console","log","Math","floor","random","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73a606ac.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Taskbutton({color, text, onTask}) {\n    return (\n        <div className='header'>\n            <button  \n                className='btn' \n                style={{backgroundColor : color}}\n                onClick={onTask}\n            >\n            {text}\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport Taskbutton from './Taskbutton'\n\nexport default function Header({showtask, onTask}) {\n    return (\n        <div className='header'>\n            <h1>T-Rex-Todo-List</h1>\n            <Taskbutton \n                color={'black'}\n                showtask={showtask}\n                onTask={onTask}\n                text={showtask ? 'Close Task' :  'Input Task'}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport {FaTimes} from 'react-icons/fa'\n\nexport default function Task({task, onDelete}) {\n    return (\n        <div className='task' >\n\n            <h3>\n            {task.text} \n            <FaTimes \n                style={{color:'red' , curser:'pointer'}}\n                onClick = {() => {onDelete(task.id)}}\n            />\n            </h3>\n   \n            <p>{task.time}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport Task from './Task'\n\nexport default function Tasks({tasks, onDelete}) {\n    return (\n        <>\n            {\n                tasks.map((task, index)=>(\n                    <Task \n                        key={index}\n                        task={task}\n                        onDelete={onDelete}\n                       \n                    />\n                ))\n            }\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Timer({time_count}) {\n   \n    return (\n        <div className=\"timer\">\n            <p>{(time_count-time_count%60)/60}:{time_count%60}</p>            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\n\nexport default function Inputbar({onAdd}) {\n    const [text, setText] = useState('');\n    const [time, setTime] = useState('');\n\n    const onSubmit = (e)=>{\n        // Not refresh the web\n        e.preventDefault()\n\n        if(!text){\n            alert(\"text must not be empry\");\n            return\n        }\n        \n        onAdd({text, time});\n        \n        setText('');\n        setTime('');\n    }\n    \n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' \n                    placeholder='Input task'\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Time</label>\n                <input \n                    type='text' \n                    value={time}\n                    placeholder='Input deadline time'\n                    onChange={(e) => setTime(e.target.value)}\n                />\n            </div>\n            <input type='submit' value='Save Task'\n                className='btn btn-block' \n            />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function Resettimebtn({onReset}) {\n    return (\n        <div>\n            <button  \n                className='btn_switch' \n                style={{backgroundColor : 'black'}}\n                onClick={onReset}\n            >\n            Reset\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Switchtimebtn({onSwitch, countdown}) {\n    return (\n        <div>\n        <button  \n            className='btn_switch' \n            style={{backgroundColor : 'black'}}\n            onClick={onSwitch}\n        >\n        {countdown ? 'Stop ' : 'Start'}\n        </button>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/trans-t-rex.84679bd4.png\";","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport Timer from './components/Timer'\nimport Inputbar from './components/Inputbar'\nimport Resettimebtn from './components/Resettimebtn'\nimport Switchtimebtn from './components/Switchtimebtn'\nimport trans_pic_rex from './images/trans-t-rex.png'\nimport {AiOutlineDoubleLeft, AiOutlineDoubleRight} from 'react-icons/ai'\n\n\nfunction App() {\n    // Show task\n    const [showtask, setshowtask] = useState(false)\n    // Timer count\n    const [count , setCount] = useState(1500);\n    const [coundown, setCountdown] = useState(false);\n    const [tasks, settasks] = useState([\n        {\n            \"id\": 1,\n            \"text\": \"pizza hut dinner\",\n            \"time\": \"18:30\",\n        },\n    ])\n\n    useEffect(()=>{\n        if(coundown === true && count >= 0){\n            const timer = setInterval(()=>{\n                setCount(count-1);\n            }, 1000)\n            //Clean up can be done like this\n            return () => {\n                clearInterval(timer);\n            }\n        }\n        else if(count < 0){\n            setCount(0);\n            setCountdown(false);\n        }\n    }, [coundown, count]); \n\n    const reset_time = ()=>{\n        setCount(1500);\n        setCountdown(false);\n    }\n\n    const switch_time = () => {\n        setCountdown(!coundown);\n    }\n\n    const add_time = () => {\n        setCount(count+300);\n    }\n    \n    const minus_time = () => {\n        setCount(count-300);\n    }\n\n    function addtask(task) {\n        console.log(\"Adding task\")\n        const id = Math.floor(Math.random() * 10000) + 1\n        const newTask = { id, ...task }\n        settasks([...tasks, newTask])\n        console.log(tasks)\n    }\n\n    const deletetask = (id)=>{\n        console.log(\"delete\", id)\n        settasks(tasks.filter((task)=>task.id !== id))\n    }\n\n    return (\n        <div style={background_style}>\n            <div className='container'>\n                <Header showtask={showtask} onTask={()=>{setshowtask(!showtask)}}/>\n                <div className=\"timer_container\">\n                    <div className=\"divider_title\"></div>\n                    <Timer time_count={count}/>\n                    <div className=\"time_btn\">\n                        <AiOutlineDoubleLeft className=\"left_icon\" onClick={minus_time}/>\n                        <div className=\"divider\"></div>\n                        <div className=\"divider\"></div>\n                        <div className=\"divider\"></div>\n                        <Switchtimebtn onSwitch={switch_time} countdown={coundown}/>\n                        <div className=\"divider\"></div>\n                        <Resettimebtn onReset={reset_time}/>\n                        <div className=\"divider\"></div>\n                        <div className=\"divider\"></div>\n                        <div className=\"divider\"></div>\n                        <AiOutlineDoubleRight className=\"right_icon\" onClick={add_time}/>\n                    </div>\n                </div>\n                {showtask && <Inputbar onAdd={addtask}/>}\n                <Tasks tasks={tasks} onDelete={deletetask}/>\n            </div>\n        </div>\n    );\n}\n\n\nconst background_style = {\n    backgroundImage: `url(${trans_pic_rex})`\n    // ,width:'100%'\n    ,backgroundRepeat: 'no-repeat'\n    /* Center and scale the image nicely */\n    ,backgroundSize: 'cover'\n    ,width: '100vw'\n    ,height: '150vh'\n    ,margin: '0'\n    // ,opacity: 0.3\n    // ,backgroundColor: 'rgba(255, 255, 255, 0.9)'\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}